# -*- mode: ruby -*-
# vi: set ft=ruby :

$configureKernel = <<-SHELL
  # カーネルを5.0.0.23-genericに更新 headersはgtp5gカーネルモジュールに必要
  # https://codechacha.com/ja/ubuntu-update-kerenl/
  # https://github.com/free5gc/free5gc/wiki/Installation
  apt-get install -y  linux-image-5.0.0-23-generic linux-headers-5.0.0-23-generic
SHELL

$configureBox = <<-SHELL
  # /etc/hosts更新
  cat <<EOF >> /etc/hosts
172.16.33.11 master
172.16.33.12 node1
172.16.33.13 node2
EOF

  # パッケージ更新
  apt-get update
  apt-get upgrade -y

  # tmux + git
  # tmux make前提パッケージ
  apt install -y git automake bison build-essential pkg-config libevent-dev libncurses5-dev
  cd /usr/local/src/
  git clone -b 3.1c https://github.com/tmux/tmux
  cd ./tmux/
  ./autogen.sh
  ./configure --prefix=/usr/local
  make
  cd ~/

  # gtp5g インストール
  git clone https://github.com/PrinzOwO/gtp5g.git
  cd gtp5g
  make
  make install
  cd ~/

  # Doker
  # (参照)https://kubernetes.io/docs/setup/production-environment/container-runtimes/#docker
  # Dockerの前提パッケージ
  apt-get install -y apt-transport-https ca-certificates curl software-properties-common gnupg2
  # Add Docker's official GPG key:
  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key --keyring /etc/apt/trusted.gpg.d/docker.gpg add -
  # Add the Docker apt repository:
  sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  # Dockerのインストール
  apt-get update
  apt-get install -y containerd.io=1.2.13-2 docker-ce=5:19.03.11~3-0~ubuntu-$(lsb_release -cs) docker-ce-cli=5:19.03.11~3-0~ubuntu-$(lsb_release -cs)
  apt-mark hold docker-ce
  
  ## Create /etc/docker
  mkdir /etc/docker

  # Set up the Docker daemon
  cat <<EOF | sudo tee /etc/docker/daemon.json
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2"
}
EOF

  # Create /etc/systemd/system/docker.service.d
  mkdir -p /etc/systemd/system/docker.service.d

  # Restart Docker
  systemctl daemon-reload
  systemctl restart docker
  # docker service to start on boot
  systemctl enable docker

  # vagrantユーザーをdockerグループに追加
  usermod -aG docker vagrant

  # Flannelの場合に必要
  # デフォルトが1なのでコメントアウト
  # echo net.bridge.bridge-nf-call-iptables = 1 >> /etc/sysctl.conf
  # sysctl -p

  # スワップを無効化する
  # スワップ領域がないのでコメントアウト
  swapoff -a
  # プロビジョニングで実行する場合はバックスラッシュのエスケープが必要なことに注意
  # sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
  sed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab


  # Kubernetesのレポジトリ追加
  curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
  cat <<EOF >/etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF

  apt-get update

  # Kubernetesの前提パッケージ -> 上記dockerの前提パッケージでインストール済
  # apt-get install -y apt-transport-https curl

  # kubeadm、kubelet、kubectlのインストール
  # apt-get install -y kubelet=1.12.2-00 kubeadm=1.12.2-00 kubectl=1.12.2-00
  apt-get install -y kubelet kubeadm kubectl
  apt-mark hold kubelet kubeadm kubectl


  # 仮想PC間でSSHを可能にする
  cd /home/vagrant/.ssh
  ssh-keygen -t rsa -b 2048 -N "" -f id_rsa
  chown vagrant:vagrant id_rsa id_rsa.pub
  sed 's/root@localhost.localdomain/vagrant/' id_rsa.pub >> authorized_keys

SHELL


Vagrant.configure(2) do |config|
  config.vm.box = "bento/ubuntu-18.04"
  config.vm.provision "shell", inline: $configureKernel
  # 再起動 ※vagrant plugin install vagrant-reload　が必要
  config.vm.provision "reload"
  config.vm.provision "shell", inline: $configureBox

end